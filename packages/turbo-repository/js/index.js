/* tslint:disable */
/* eslint-disable */
/* prettier-ignore */

/* auto-generated by NAPI-RS */

const { existsSync, readFileSync } = require('fs')
const { join } = require("path");

const { platform, arch } = process;

let nativeBinding = null;

// TODO: find-up to turbo-repository? This currently only works from turbo-repository/js/dist
const localPath = join(__dirname, "..", "..", "native", "@turbo");
const pkgRoot = "@turbo/repository";

function loadViaSuffix(suffix) {
  const localNativePath = join(localPath, `repository.${suffix}.node`);
  if (existsSync(localNativePath)) {
    return require(localNativePath);
  }
  return require(`${pkgRoot}-${suffix}`);
}

let suffix;
switch (platform) {
  case "win32":
    switch (arch) {
      case "x64":
        suffix = "win32-x64-msvc";
        break;
      case "arm64":
        suffix = "win32-arm64-msvc";
        break;
      default:
        throw new Error(`Unsupported architecture on Windows: ${arch}`);
    }
    break;
  case "darwin":
    switch (arch) {
      case "x64":
        suffix = "darwin-x64";
        break;
      case "arm64":
        suffix = "darwin-arm64";
        break;
      default:
        throw new Error(`Unsupported architecture on macOS: ${arch}`);
    }
    break;
  case "linux":
    switch (arch) {
      case "x64":
        suffix = "linux-x64-musl";
        break;
      case "arm64":
        suffix = "linux-arm64-musl";
        break;
      default:
        throw new Error(`Unsupported architecture on Linux: ${arch}`);
    }
    break;
  default:
    throw new Error(`Unsupported OS: ${platform}, architecture: ${arch}`);
}

nativeBinding = loadViaSuffix(suffix);

const { PackageManagerRoot, PackageManager, Workspace } = nativeBinding;

module.exports.PackageManagerRoot = PackageManagerRoot;
module.exports.PackageManager = PackageManager;
module.exports.Workspace = Workspace;
